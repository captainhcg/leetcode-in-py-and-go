import collections
import random
class RandomizedCollection(object):

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.arr = []
        self.d = collections.defaultdict(set)

    def insert(self, val):
        """
        Inserts a value to the collection. Returns true if the collection did not already contain the specified element.
        :type val: int
        :rtype: bool
        """
        self.arr.append(val)
        self.d[val].add(len(self.arr) - 1)
        return len(self.d[val]) == 1

    def remove(self, val):
        """
        Removes a value from the collection. Returns true if the collection contained the specified element.
        :type val: int
        :rtype: bool
        """
        if val not in self.d:
            return False
        idx_to_swap = len(self.arr) - 1
        idx_to_remove = self.d[val].pop()
        if not len(self.d[val]):
            del self.d[val]
        if idx_to_swap != idx_to_remove:
            val_to_swap = self.arr[-1]
            self.d[val_to_swap].remove(idx_to_swap)
            self.d[val_to_swap].add(idx_to_remove)
            self.arr[idx_to_remove] = val_to_swap
        self.arr.pop()

        return True

    def getRandom(self):
        """
        Get a random element from the collection.
        :rtype: int
        """
        return random.choice(self.arr)
